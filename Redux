import { useState } from "react";
level devil
function SecondUserList() {
  const [users, setUsers] = useState([]);
  const [loading, setLoading] = useState(false); // changed
  const [err, setErrors] = useState(null);

  const fetchdata = () => {
    setLoading(true);
    fetch("https://jsonplaceholder.typicode.com/users")
      .then((response) => {
        if (!response.ok) {
          throw new Error("Something Went Wrong.......");
        }
        return response.json();
      })
      .then((data) => {
        setUsers(data);
        setLoading(false);
      })
      .catch((err) => {
        setErrors(err.message);
        setLoading(false);
      });
  };

  if (loading) {
    return <p>Loading Users Details....Please Wait for Some Time......</p>;
  }

  if (err) {
    return <p>Error: {err}</p>;
  }

  return (
    <div>
      <h1>User List</h1>
      <button onClick={fetchdata}>Fetch UserList</button>
      <ul>
        {users.map((user) => (
          <li key={user.id}>
            <strong>{user.name}</strong> : <strong>{user.email}</strong>
          </li>
        ))}
      </ul>
    </div>
  );
}

export default SecondUserList;
==================================================================================================With fetch=========================
import { useState,useEffect } from "react";


function UserList(){
    const [users,setUsers]=useState([])
 // If try to fetch the data from the api (many are there) that time to display loading in the screen
    const [loading,setLoading]=useState(true)
    //dont have any errror tha'ts why null
    const [err,setErrors]=useState(null)
    useEffect(()=>{
        //fect method in javascript to fetch the data fron the api
        fetch("https://jsonplaceholder.typicode.com/users")
        .then((response)=>{
            if(!response.ok){
                throw new Error("Something Weth Wrong.......")
            }
            //convert response to json type
            return response.json();
        })
        .then((data)=>{
            setUsers(data);
            setLoading(false);
        })
        .catch((err)=>{
            setErrors(err.message);
            setLoading(false);
        })
    },[])
    if(loading)
    {
        return <p>Loading Users Details....Please Wait for Some Time......</p>
    }
    if(err){
        return <p>Error :{err}</p>
    }

    return(
        <div>
            <h1>User List</h1>
            <ul>
                {users.map((user)=>(
                    <li key={user.id}>
                        <strong>{user.name}</strong> : <strong>{user.email}</strong>
                    </li>
                ))}
            </ul>

        </div>
    )
}
export default UserList;
============================================with axios==================================
//In the more easy way we can do with the axios cleaner approach than the fect
// No need to convert into json format (response into) it is done automatically
import axios from "axios";
import { useState,useEffect } from "react"
const UserListAxios=()=>{
    const [users,setUsers]=useState([])
     
    const [loading,setLoading]=useState(true)
        
    const [err,setErrors]=useState(null)
  useEffect(()=>{
    axios.get("https://jsonplaceholder.typicode.com/users")
    .then((response)=>{
        setUsers(response.data);
        setLoading(false);

    })
    .catch((err)=>{
        setErrors(err.message);
        setLoading(false)
    })
  },[])
  if(loading){
    return <p>Loading User Details</p>
  }
  if(err)
  {
    return <p>Error:{err}</p>
  }
  return(
    <div>
        <h2>User List With Axios:</h2>
        <ul>
            {users.map((user)=>(
                <li key={user.id}>
                    <strong>{user.name}:{user.email}</strong>
                </li>
            ))}
        </ul>
    </div>
  )
}
export default UserListAxios;
=================================================
import { useSelector,useDispatch } from "react-redux"
import { useEffect } from "react"
import { fetchUsers } from "./userAction"
function Fetch(){
    const { users, loading, error } = useSelector((state) => state); // âœ… ONLY IF root state = userReducer

    const dispatch=useDispatch();

    useEffect(()=>{
        dispatch(fetchUsers());
    },[dispatch]);
    if(loading){
        return <p>Loading User Details........</p>
    }
    if(error)
    {
        return <p>Error:{error}</p>
    }
    return(
      <div>
        <h2>Users from API:</h2>
        <ul>
            {users.map(user=>(
                <li key={user.id}>
                    <strong>{user.name}:{user.email}</strong>
                </li>
            ))}
        </ul>

      </div>
    )
}
export default Fetch;

